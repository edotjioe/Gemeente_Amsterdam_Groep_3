)
library(rjson)
install.packages("rjson")
library(rjson)
crosslet(
x = "country",
y = c("district_code", "district_name", "quarter_code", "quarter_name", "neighbourhood_code", "neighbourhood_name"),
data = locations
)
crosslet(
x = "Amsterdam",
y = c("district_code", "district_name", "quarter_code", "quarter_name", "neighbourhood_code", "neighbourhood_name"),
data = locations
)
crosslet(
x = "neighbourhood_name",
y = c("district_code", "district_name", "quarter_code", "quarter_name", "neighbourhood_code"),
data = locations
)
install.packages("ggMap")
install.packages("ggmap")
amst_map <- get_map(location = "Amsterdam", source = "google", zoom = 14, maptype = "terrain")
library(ggmap)
amst_map <- get_map(location = "Amsterdam", source = "google", zoom = 14, maptype = "terrain")
ggmap(amst_map, extent = "normal")
amst_map <- get_map(location = "Amsterdam", source = "google", zoom = 10, maptype = "terrain")
ggmap(amst_map, extent = "normal")
amst_map <- get_map(location = "Amsterdam", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
amst_map <- get_map(location = "Amsterdam", source = "google", zoom = 12, maptype = "terrain")
ggmap(amst_map, extent = "normal")
amst_map <- get_map(location = "Amsterdam", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Kop Zeedijk", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Amsterdam, Kop Zeedijk", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Amsterdam Kop Zeedijk", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Kop Zeedijk, Amsterdam", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Kop Zeedijk Amsterdam", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
download.file(
'
http://www.census.gov/geo/cob/bdy/tr/tr00shp/tr48_d00_shp.zip
'
, destfile =
'
census.zip
'
)
unzip(
'
census.zip
'
); library(maptools); library(gpclib); library(sp); gpclibPermit()
shapefile <- readShapeSpatial(
'
tr48_d00.shp
'
, proj4string = CRS("+proj=longlat +datum=WGS84"))
data <- fortify(shapefile)
qmap(
'
texas
'
, zoom = 6, maptype =
'
satellite
'
) +
geom_polygon(aes(x = long, y = lat, group = group), data = data,
colour =
'
white
'
, fill =
'
black
'
, alpha = .4, size = .3)
install.packages("maptools")
install.packages("gpclib")
install.packages("sp")
download.file('http://www.census.gov/geo/cob/bdy/tr/tr00shp/tr48_d00_shp.zip', destfile = 'census.zip')
unzip('census.zip');
library(maptools);
library(gpclib);
library(sp);
gpclibPermit()
shapefile <- readShapeSpatial('tr48_d00.shp', proj4string = CRS("+proj=longlat +datum=WGS84"))
data <- fortify(shapefile)
qmap('texas', zoom = 6, maptype ='satellite') +
geom_polygon(aes(x = long, y = lat, group = group), data = data,
colour ='white', fill ='black', alpha = .4, size = .3)
library(ggmap)
amst_map <- get_map(location = "Kop Zeedijk", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Burgwallen Oost", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
#install.packages("ggmap")
library(ggmap)
amst_map <- get_map(location = "Burgwallen-Nieuwe Zijde", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Burgwallen-Nieuwe Zijde", source = "openstreetmap", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Burgwallen-Nieuwe Zijde", source = "osm", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Amsterdam", source = "osm", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
?get_openstreetmap
library(ggmap)
amst_map <- get_map(location = "Amsterdam", source = "google", zoom = 11, maptype = "terrain")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Amsterdam", source = "google", zoom = 11, maptype = "sattelite")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Amsterdam", source = "google", zoom = 11, maptype = "satellite")
ggmap(amst_map, extent = "normal")
library(ggmap)
amst_map <- get_map(location = "Amsterdam", source = "osm", zoom = 11, maptype = "satellite")
ggmap(amst_map, extent = "normal")
install.packages("maps")
install.packages("maps")
install.packages("XML")
library(XML)
library(ggplot2)
library(plyr)
library(maps)
unemp <-
readHTMLTable('http://www.bls.gov/web/laus/laumstrk.htm',
colClasses = c('character', 'character', 'numeric'))[[2]]
names(unemp) <- c('rank', 'region', 'rate')
unemp$region <- tolower(unemp$region)
us_state_map <- map_data('state')
map_data <- merge(unemp, us_state_map, by = 'region')
map_data <- arrange(map_data, order)
states <- data.frame(state.center, state.abb)
p1 <- ggplot(data = map_data, aes(x = long, y = lat, group = group))
p1 <- p1 + geom_polygon(aes(fill = cut_number(rate, 5)))
p1 <- p1 + geom_path(colour = 'gray', linestyle = 2)
p1 <- p1 + scale_fill_brewer('Unemployment Rate (Jan 2011)', palette  = 'PuRd')
p1 <- p1 + coord_map()
p1 <- p1 + geom_text(data = states, aes(x = x, y = y, label = state.abb, group = NULL), size = 2)
p1 <- p1 + theme_bw()
p1
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
library(XML)
library(ggplot2)
library(plyr)
library(maps)
unemp <-
readHTMLTable('http://www.bls.gov/web/laus/laumstrk.htm',
colClasses = c('character', 'character', 'numeric'))[[2]]
names(unemp) <- c('rank', 'region', 'rate')
unemp$region <- tolower(unemp$region)
us_state_map <- map_data('state')
map_data <- merge(unemp, us_state_map, by = 'region')
map_data <- arrange(map_data, order)
states <- data.frame(state.center, state.abb)
p1 <- ggplot(data = map_data, aes(x = long, y = lat, group = group))
p1 <- p1 + geom_polygon(aes(fill = cut_number(rate, 5)))
p1 <- p1 + geom_path(colour = 'gray', linestyle = 2)
p1 <- p1 + scale_fill_brewer('Unemployment Rate (Jan 2011)', palette  = 'PuRd')
p1 <- p1 + coord_map()
p1 <- p1 + geom_text(data = states, aes(x = x, y = y, label = state.abb, group = NULL), size = 2)
p1 <- p1 + theme_bw()
p1
library(XML)
library(ggplot2)
library(plyr)
library(maps)
unemp <-
readHTMLTable('http://www.bls.gov/web/laus/laumstrk.html',
colClasses = c('character', 'character', 'numeric'))[[2]]
names(unemp) <- c('rank', 'region', 'rate')
unemp$region <- tolower(unemp$region)
us_state_map <- map_data('state')
map_data <- merge(unemp, us_state_map, by = 'region')
map_data <- arrange(map_data, order)
states <- data.frame(state.center, state.abb)
p1 <- ggplot(data = map_data, aes(x = long, y = lat, group = group))
p1 <- p1 + geom_polygon(aes(fill = cut_number(rate, 5)))
p1 <- p1 + geom_path(colour = 'gray', linestyle = 2)
p1 <- p1 + scale_fill_brewer('Unemployment Rate (Jan 2011)', palette  = 'PuRd')
p1 <- p1 + coord_map()
p1 <- p1 + geom_text(data = states, aes(x = x, y = y, label = state.abb, group = NULL), size = 2)
p1 <- p1 + theme_bw()
p1
library(maps)
buurten <- read.csv("C:/Users/edotj/Documents/R/Datasets/Map-buurten_amsterdam", sep = ";", stringsAsFactors = FALSE)
buurten <- read.csv("C:/Users/edotj/Documents/R/Datasets/Map-buurten_amsterdam.csv", sep = ";", stringsAsFactors = FALSE)
buurten <- read.csv("C:/Users/edotj/Documents/R/Datasets/Map-buurten_amsterdam.csv", sep = ";", stringsAsFactors = FALSE)
View(buurten)
View(buurten)
View(buurten)
buurten <- read.csv("C:/Users/edotj/Documents/R/Datasets/Map-buurten_amsterdam.csv", sep = ";", stringsAsFactors = TRUE)
library(maptools)
buurten <- readShapePoly("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.shp",proj4string=crswgs84,verbose=TRUE)
crswgs84 <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
buurten <- readShapePoly("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.shp",proj4string=crswgs84,verbose=TRUE)
?readShapePoly()
buurten <- readShapePoly("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.shp")
buurten <- readShapePoly(file.choose())
buurten <- readShapePoly("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.shp")
buurten <- readShapePoly("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN")
buurten <- readShapePoints("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN")
install.packages("sf")
library(sf)
shapeName <- read_sf('C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.shp')
buurten <- readShapeSpatial("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN")
nycounties <- geojsonio::geojson_read("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.json",
what = "sp")
install.packages("geojsonio")
library(geojsonio)
nycounties <- geojsonio::geojson_read("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.json",
what = "sp")
str(nycounties)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
install.packages("leaflet")
library(leaflet)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
topoData <- readLines("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.json") %>% paste(collapse = "\n")
leaflet(nycounties)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0("Amsterdam", ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.2)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = TRUE, smoothFactor = 0.3, fillOpacity = 0.2)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = TRUE, smoothFactor = 0.5, fillOpacity = 0.2)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.5, fillOpacity = 0.2)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 1, fillOpacity = 0.2)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 1, fillOpacity = 1)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = TRUE, smoothFactor = 1, fillOpacity = 0.5)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = TRUE, smoothFactor = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE)))
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = TRUE, smoothFactor = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
library(geojsonio)
library(leaflet)
buurten_map <- geojsonio::geojson_read("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.json",
what = "sp")
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "red", weight = 2,
bringToFront = TRUE))
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE))
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE),
label = ~paste0(data$Buurt_code, ": ", formatC(data$Buurt_code, big.mark = ","))
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE),
label = ~paste0(data$Buurt_code, ": ", formatC(data$Buurt_code, big.mark = ","))
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE),
label = Buurt_code)
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE))
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = data$Buurt_code)
str(buurten_map)
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = Buurt_code)
data$
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = data$Buurt_code)
buurten_map$Buurt_code
buurten_map$Buurt_naam
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = buurten_map$Buurt_code)
#install.packages("readxl")
#install.packages("dplyr")
#install.packages("stringr")
library(readxl)
library(dplyr)
library(stringr)
# Loading data into R
bbga_data <- read.csv("data_files/bbga_data.csv", sep = ";", stringsAsFactors = FALSE)
bbga_metadata <- read_xlsx("data_files/bbga_additional_metadata.xlsx", sheet = 2)
bbga_additional <- read_xlsx("data_files/bbga_additional_metadata.xlsx", sheet = 1)
# Filtering data
bbga_data <- bbga_data[which(bbga_data$jaar <= 2017 & bbga_data$jaar >= 2005),]
bbga_additional <- bbga_additional[which(bbga_additional$jaar <= 2017 & bbga_additional$jaar >= 2005),]
facts <- bbga_data
# Location (unique) data, niveau: 2, 4 and 8 (8 = 'Buurten')
temp_location_data <- unique(bbga_additional[, 1:8])
temp_location_data <- temp_location_data[which(temp_location_data$niveau == 2 | temp_location_data$niveau == 4 | temp_location_data$niveau == 8),]
# Only 'location niveau; 8' and remove NA rows
temp_location_8 <- na.omit(temp_location_data[which(temp_location_data == 8),])
# Only 'gebiedscode15; Buurten'
facts <- facts[grep('[A-Z][0-9]{2}[a-z]', facts$gebiedcode15),]
# Loading data in statistics
statistics <- data.frame("theme_name" = bbga_metadata$THEMA,
"statistics_variable" = toupper(bbga_metadata$Variabele),
"statustics_unit" = bbga_metadata$Rekeneenheid, stringsAsFactors = FALSE)
# Loading data in locations
locations <- data.frame("district_code",
"district_name",
"quarter_code",
"quarter_name",
"neighbourhood_code",
"neighbourhood_name", stringsAsFactors = FALSE)
colnames(locations) <- c("district_code",
"district_name",
"quarter_code",
"quarter_name",
"neighbourhood_code",
"neighbourhood_name")
# loop for extracting district_code and quarter_code, while also assigning the corresponding 'gebiedsnaam'
for(i in 1:nrow(temp_location_8)) {
district_code <- str_extract(temp_location_8[i,]$gebiedcode15, "[A-Z]")
quarter_code <- str_extract(temp_location_8[i,]$gebiedcode15, "[A-Z][0-9]{2}")
locations[i,] <- list(
district_code <- district_code,
district_name <- temp_location_data[which(temp_location_data$gebiedcode15 == district_code),]$gebiednaam,
quarter_code <- quarter_code,
quarter_name <- temp_location_data[which(temp_location_data$gebiedcode15 == quarter_code),]$gebiednaam,
neighbourhood_code <- temp_location_8[i,]$gebiedcode15,
neighbourhood_name <- temp_location_8[i,]$gebiednaam
)
}
# Loading data in facts
facts <- transform(facts, variabele = match(facts$variabele, statistics$statistics_variable))
facts <- transform(facts, gebiedcode15 = match(facts$gebiedcode15, locations$neighbourhood_code))
facts$version <- 1
facts <- facts[, c(3, 2, 4, 1, 5)]
colnames(facts) <- c("statistics_id", "locations_id", "value", "year", "version")
facts <- facts[complete.cases(facts),]
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = locations$neighbourhood_name)
match(buurten_map$Buurt_code, locations$neighbourhood_code)
buurten_map <- transform(buurten_map, buurt_id = match(buurten_map$Buurt_code, locations$neighbourhood_code))
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = buurten_map$buurt_id)
buurten_map <- geojsonio::geojson_read("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.json",
what = "sp")
buurten_map2 <- transform(buurten_map, buurt_id = match(buurten_map$Buurt_code, locations$neighbourhood_code))
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = buurten_map2$buurt_id)
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = buurten_map2$buurt_code)
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = buurten_map$buurt_code)
buurten_map <- geojsonio::geojson_read("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.json",
what = "sp")
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = buurten_map$buurt_code)
library(geojsonio)
library(leaflet)
buurten_map <- geojsonio::geojson_read("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.json",
what = "sp")
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = buurten_map$Buurt_code)
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = locations$neighbourhood_name)
library(geojsonio)
library(leaflet)
buurten_map <- geojsonio::geojson_read("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.json",
what = "sp")
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "green",
highlightOptions = highlightOptions(color = "blue", weight = 2,
bringToFront = TRUE), label = locations$neighbourhood_name)
shiny::runApp('~/Projects/R/Gemeente_Amsterdam_Groep_3/Gemeente Amsterdam Visuals')
av_variables_id <- unique(facts[which(facts$locations_id == location$location_id), 1])
av_variables <- statistics[av_variables_id, 3]
av_variables_id <- unique(facts[which(facts$locations_id == 1), 1])
av_variables <- statistics[1, 3]
runApp('~/Projects/R/Gemeente_Amsterdam_Groep_3/Gemeente Amsterdam Visuals')
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE), label = locations$neighbourhood_name)
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "red",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE), label = locations$neighbourhood_name)
buurten_map <- geojsonio::geojson_read("C:/Users/edotj/Documents/R/Datasets/GEBIED_BUURTEN.json",
what = "sp", stringAsFactor = FALSE)
leaflet(data = buurten_map) %>%
addTiles() %>%
addPolygons(stroke = TRUE, weight = 1, smoothFactor = 1, fillOpacity = 0.5, color = "red",
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE), label = buurten_map$Buurt)
